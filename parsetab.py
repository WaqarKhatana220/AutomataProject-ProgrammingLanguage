
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'SAND BOOL CHAR COMMA DIVIDE EQUAL EQUALEQUAL FLOAT GREATERTHAN GREATERTHANEQUALTO INT LESSTHAN LESSTHANEQUALTO LPAREN MINUS MINUSMINUS MODULUS MULTIPLY NAME NOT NOTEQUAL OR PLUS PLUSPLUS POWER PRINT RPAREN SEMICOLON STRING\n    S : stmt S\n    \n    S :\n    \n    stmt : PRINT LPAREN exp RPAREN SEMICOLON\n     \n    exp : exp PLUS exp\n        | exp MINUS exp\n        | exp DIVIDE exp\n        | exp MULTIPLY exp\n        | exp COMMA exp\n    \n    exp : INT\n        | FLOAT\n    \n    exp : STRING\n    \n    exp : CHAR\n    '
    
_lr_action_items = {'$end':([0,1,2,4,17,],[-2,0,-2,-1,-3,]),'PRINT':([0,2,17,],[3,3,-3,]),'LPAREN':([3,],[5,]),'INT':([5,12,13,14,15,16,],[7,7,7,7,7,7,]),'FLOAT':([5,12,13,14,15,16,],[8,8,8,8,8,8,]),'STRING':([5,12,13,14,15,16,],[9,9,9,9,9,9,]),'CHAR':([5,12,13,14,15,16,],[10,10,10,10,10,10,]),'RPAREN':([6,7,8,9,10,18,19,20,21,22,],[11,-9,-10,-11,-12,-4,-5,-6,-7,-8,]),'PLUS':([6,7,8,9,10,18,19,20,21,22,],[12,-9,-10,-11,-12,12,12,12,12,12,]),'MINUS':([6,7,8,9,10,18,19,20,21,22,],[13,-9,-10,-11,-12,13,13,13,13,13,]),'DIVIDE':([6,7,8,9,10,18,19,20,21,22,],[14,-9,-10,-11,-12,14,14,14,14,14,]),'MULTIPLY':([6,7,8,9,10,18,19,20,21,22,],[15,-9,-10,-11,-12,15,15,15,15,15,]),'COMMA':([6,7,8,9,10,18,19,20,21,22,],[16,-9,-10,-11,-12,16,16,16,16,16,]),'SEMICOLON':([11,],[17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,2,],[1,4,]),'stmt':([0,2,],[2,2,]),'exp':([5,12,13,14,15,16,],[6,18,19,20,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> stmt S','S',2,'p_start','yapl_parser.py',17),
  ('S -> <empty>','S',0,'p_start_empty','yapl_parser.py',24),
  ('stmt -> PRINT LPAREN exp RPAREN SEMICOLON','stmt',5,'p_print_stmt','yapl_parser.py',31),
  ('exp -> exp PLUS exp','exp',3,'p_exp_bin','yapl_parser.py',37),
  ('exp -> exp MINUS exp','exp',3,'p_exp_bin','yapl_parser.py',38),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_bin','yapl_parser.py',39),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_bin','yapl_parser.py',40),
  ('exp -> exp COMMA exp','exp',3,'p_exp_bin','yapl_parser.py',41),
  ('exp -> INT','exp',1,'p_exp_num','yapl_parser.py',54),
  ('exp -> FLOAT','exp',1,'p_exp_num','yapl_parser.py',55),
  ('exp -> STRING','exp',1,'p_exp_string','yapl_parser.py',61),
  ('exp -> CHAR','exp',1,'p_exp_char','yapl_parser.py',67),
]
